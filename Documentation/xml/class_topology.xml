<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_topology" kind="class" language="C++" prot="public">
    <compoundname>Topology</compoundname>
    <includes refid="_topology_8h" local="no">Topology.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_topology_1a77d60b0f3dad374ac5ecbc54cffc0cbb" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Topology::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <qualifiedname>Topology::id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="7" column="8" bodyfile="Topology.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_topology_1a378c0fa24b260d7e00f0346b09716d16" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
        <definition>vector&lt;Component* &gt; Topology::components</definition>
        <argsstring></argsstring>
        <name>components</name>
        <qualifiedname>Topology::components</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="8" column="8" bodyfile="Topology.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_topology_1a10efafb41bd5564c06b0fc4851cbc5eb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Topology::_deleteAllComponents</definition>
        <argsstring>()</argsstring>
        <name>_deleteAllComponents</name>
        <qualifiedname>Topology::_deleteAllComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="9" column="6" bodyfile="Topology.cpp" bodystart="4" bodyend="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_topology_1af4a9e293931bb78166825532c12dc478" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Topology::Topology</definition>
        <argsstring>(const Topology &amp;other)</argsstring>
        <name>Topology</name>
        <qualifiedname>Topology::Topology</qualifiedname>
        <param>
          <type>const <ref refid="class_topology" kindref="compound">Topology</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="11" column="1" bodyfile="Topology.cpp" bodystart="10" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a4dfd067373ce08fa08f8bd4e72b3e1d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Topology::Topology</definition>
        <argsstring>(string id, vector&lt; Component * &gt; components)</argsstring>
        <name>Topology</name>
        <qualifiedname>Topology::Topology</qualifiedname>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="12" column="1" bodyfile="Topology.cpp" bodystart="37" bodyend="41"/>
        <references refid="class_topology_1a7b9261604f37f43420d57435f7ac07ab" compoundref="_topology_8cpp" startline="62" endline="65">setComponents</references>
        <references refid="class_topology_1a333ff1352e863bd9118879f1c07be78d" compoundref="_topology_8cpp" startline="67" endline="75">setID</references>
      </memberdef>
      <memberdef kind="function" id="class_topology_1ac7b36123304ae578155bd47c3714bda4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_topology" kindref="compound">Topology</ref></type>
        <definition>Topology Topology::operator=</definition>
        <argsstring>(const Topology &amp;other)</argsstring>
        <name>operator=</name>
        <qualifiedname>Topology::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_topology" kindref="compound">Topology</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="13" column="10" bodyfile="Topology.cpp" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="class_topology_1ae42fa0cf1b8a0f31a1d4849fcbf3017f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Topology::operator==</definition>
        <argsstring>(const Topology &amp;other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>Topology::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_topology" kindref="compound">Topology</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="14" column="6" bodyfile="Topology.cpp" bodystart="25" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a10722b274f427a7b8ca3ccdb67d89ebe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
        <definition>Component * Topology::getComponent</definition>
        <argsstring>(string id) const</argsstring>
        <name>getComponent</name>
        <qualifiedname>Topology::getComponent</qualifiedname>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="15" column="11" bodyfile="Topology.cpp" bodystart="43" bodyend="51"/>
        <referencedby refid="class_topology_1a1fa99284d7854654f6834bd4796b67d0" compoundref="_topology_8cpp" startline="87" endline="98">getComponentsWithNetlistNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_topology_1ad4ba550251112a2f63b10a306692fc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Topology::addComponent</definition>
        <argsstring>(Component *component)</argsstring>
        <name>addComponent</name>
        <qualifiedname>Topology::addComponent</qualifiedname>
        <param>
          <type><ref refid="class_component" kindref="compound">Component</ref> *</type>
          <declname>component</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="16" column="6" bodyfile="Topology.cpp" bodystart="56" bodyend="60"/>
        <references refid="class_component_1a2c3dfb75ae1f05a13a451b455dfef01a" compoundref="_component_8cpp" startline="59" endline="62">Component::getID</references>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a7b9261604f37f43420d57435f7ac07ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Topology::setComponents</definition>
        <argsstring>(vector&lt; Component * &gt; components)</argsstring>
        <name>setComponents</name>
        <qualifiedname>Topology::setComponents</qualifiedname>
        <param>
          <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
          <declname>components</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="17" column="6" bodyfile="Topology.cpp" bodystart="62" bodyend="65"/>
        <referencedby refid="class_topology_1a4dfd067373ce08fa08f8bd4e72b3e1d1" compoundref="_topology_8cpp" startline="37" endline="41">Topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a333ff1352e863bd9118879f1c07be78d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Topology::setID</definition>
        <argsstring>(string id)</argsstring>
        <name>setID</name>
        <qualifiedname>Topology::setID</qualifiedname>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="18" column="6" bodyfile="Topology.cpp" bodystart="67" bodyend="75"/>
        <referencedby refid="class_topology_1a4dfd067373ce08fa08f8bd4e72b3e1d1" compoundref="_topology_8cpp" startline="37" endline="41">Topology</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_topology_1af2f26bfb53b21b672fd2e6759752b12b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Topology::getID</definition>
        <argsstring>() const</argsstring>
        <name>getID</name>
        <qualifiedname>Topology::getID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="19" column="8" bodyfile="Topology.cpp" bodystart="77" bodyend="80"/>
        <referencedby refid="class_j_s_o_n_1a8e9a88433e4ca77f3fb9bf18b04619cc" compoundref="_j_s_o_n_8cpp" startline="101" endline="108">JSON::writeTopology</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a22eb41600ab4c15be29732cff616cca5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
        <definition>vector&lt; Component * &gt; Topology::getComponents</definition>
        <argsstring>() const</argsstring>
        <name>getComponents</name>
        <qualifiedname>Topology::getComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="20" column="8" bodyfile="Topology.cpp" bodystart="82" bodyend="85"/>
        <referencedby refid="class_a_p_i_1a46f09b5c63cc0e7ee9fb759e3947671c" compoundref="_a_p_i_8cpp" startline="43" endline="49">API::queryDevices</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a1fa99284d7854654f6834bd4796b67d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
        <definition>vector&lt; Component * &gt; Topology::getComponentsWithNetlistNode</definition>
        <argsstring>(string netlistNodeID) const</argsstring>
        <name>getComponentsWithNetlistNode</name>
        <qualifiedname>Topology::getComponentsWithNetlistNode</qualifiedname>
        <param>
          <type>string</type>
          <declname>netlistNodeID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="21" column="8" bodyfile="Topology.cpp" bodystart="87" bodyend="98"/>
        <references refid="class_component_1ace23df4932822a6e64f2a9edf3004f53">Component::connectedTo</references>
        <references refid="class_topology_1a10722b274f427a7b8ca3ccdb67d89ebe" compoundref="_topology_8cpp" startline="43" endline="51">getComponent</references>
        <referencedby refid="class_a_p_i_1a380efa1662170ab32c19c52ea8f47841" compoundref="_a_p_i_8cpp" startline="51" endline="57">API::queryDevicesWithNetlistNodes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a5f30401b0afdd299445ede9a3b0ca6ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Topology::printComponents</definition>
        <argsstring>() const</argsstring>
        <name>printComponents</name>
        <qualifiedname>Topology::printComponents</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="22" column="6" bodyfile="Topology.cpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_topology_1a3e447669757c8311c7f6f8edc705abf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Topology::~Topology</definition>
        <argsstring>()</argsstring>
        <name>~Topology</name>
        <qualifiedname>Topology::~Topology</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Topology.h" line="23" column="1" bodyfile="Topology.cpp" bodystart="106" bodyend="109"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>Topology</label>
        <link refid="class_topology"/>
      </node>
    </collaborationgraph>
    <location file="Topology.h" line="4" column="1" bodyfile="Topology.h" bodystart="5" bodyend="24"/>
    <listofallmembers>
      <member refid="class_topology_1a10efafb41bd5564c06b0fc4851cbc5eb" prot="private" virt="non-virtual"><scope>Topology</scope><name>_deleteAllComponents</name></member>
      <member refid="class_topology_1ad4ba550251112a2f63b10a306692fc11" prot="public" virt="non-virtual"><scope>Topology</scope><name>addComponent</name></member>
      <member refid="class_topology_1a378c0fa24b260d7e00f0346b09716d16" prot="private" virt="non-virtual"><scope>Topology</scope><name>components</name></member>
      <member refid="class_topology_1a10722b274f427a7b8ca3ccdb67d89ebe" prot="public" virt="non-virtual"><scope>Topology</scope><name>getComponent</name></member>
      <member refid="class_topology_1a22eb41600ab4c15be29732cff616cca5" prot="public" virt="non-virtual"><scope>Topology</scope><name>getComponents</name></member>
      <member refid="class_topology_1a1fa99284d7854654f6834bd4796b67d0" prot="public" virt="non-virtual"><scope>Topology</scope><name>getComponentsWithNetlistNode</name></member>
      <member refid="class_topology_1af2f26bfb53b21b672fd2e6759752b12b" prot="public" virt="non-virtual"><scope>Topology</scope><name>getID</name></member>
      <member refid="class_topology_1a77d60b0f3dad374ac5ecbc54cffc0cbb" prot="private" virt="non-virtual"><scope>Topology</scope><name>id</name></member>
      <member refid="class_topology_1ac7b36123304ae578155bd47c3714bda4" prot="public" virt="non-virtual"><scope>Topology</scope><name>operator=</name></member>
      <member refid="class_topology_1ae42fa0cf1b8a0f31a1d4849fcbf3017f" prot="public" virt="non-virtual"><scope>Topology</scope><name>operator==</name></member>
      <member refid="class_topology_1a5f30401b0afdd299445ede9a3b0ca6ec" prot="public" virt="non-virtual"><scope>Topology</scope><name>printComponents</name></member>
      <member refid="class_topology_1a7b9261604f37f43420d57435f7ac07ab" prot="public" virt="non-virtual"><scope>Topology</scope><name>setComponents</name></member>
      <member refid="class_topology_1a333ff1352e863bd9118879f1c07be78d" prot="public" virt="non-virtual"><scope>Topology</scope><name>setID</name></member>
      <member refid="class_topology_1af4a9e293931bb78166825532c12dc478" prot="public" virt="non-virtual"><scope>Topology</scope><name>Topology</name></member>
      <member refid="class_topology_1a4dfd067373ce08fa08f8bd4e72b3e1d1" prot="public" virt="non-virtual"><scope>Topology</scope><name>Topology</name></member>
      <member refid="class_topology_1a3e447669757c8311c7f6f8edc705abf2" prot="public" virt="non-virtual"><scope>Topology</scope><name>~Topology</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
