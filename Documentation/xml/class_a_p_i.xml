<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.4" xml:lang="en-US">
  <compounddef id="class_a_p_i" kind="class" language="C++" prot="public">
    <compoundname>API</compoundname>
    <includes refid="_a_p_i_8h" local="no">API.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_a_p_i_1a09c04367a642b864f1293961ff5a52f4" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="class_topology" kindref="compound">Topology</ref> * &gt;</type>
        <definition>vector&lt;Topology*&gt; API::topologyList</definition>
        <argsstring></argsstring>
        <name>topologyList</name>
        <qualifiedname>API::topologyList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="6" column="8" bodyfile="API.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_a_p_i_1a2fec1029af1acd1ad9029587e5b36f4f" prot="private" static="no" mutable="no">
        <type><ref refid="class_j_s_o_n" kindref="compound">JSON</ref></type>
        <definition>JSON API::parser</definition>
        <argsstring></argsstring>
        <name>parser</name>
        <qualifiedname>API::parser</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="7" column="6" bodyfile="API.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_a_p_i_1a6b52b248c1e83149a757e951f2dc322c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_topology" kindref="compound">Topology</ref> *</type>
        <definition>Topology * API::_getTopology</definition>
        <argsstring>(string id)</argsstring>
        <name>_getTopology</name>
        <qualifiedname>API::_getTopology</qualifiedname>
        <param>
          <type>string</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="8" column="10" bodyfile="API.cpp" bodystart="2" bodyend="7"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_a_p_i_1a56489f419f0fb6517d003c47f9c7d4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_topology" kindref="compound">Topology</ref> *</type>
        <definition>Topology * API::readTopology</definition>
        <argsstring>(string fileName)</argsstring>
        <name>readTopology</name>
        <qualifiedname>API::readTopology</qualifiedname>
        <param>
          <type>string</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="10" column="10" bodyfile="API.cpp" bodystart="8" bodyend="15"/>
        <references refid="class_j_s_o_n_1a24f221b9202d745dc42a694697813eda" compoundref="_j_s_o_n_8cpp" startline="58" endline="80">JSON::readTopology</references>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a03cbecbd8bdee695b19fc6cd4a5d9a93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool API::writeTopology</definition>
        <argsstring>(string topologyID)</argsstring>
        <name>writeTopology</name>
        <qualifiedname>API::writeTopology</qualifiedname>
        <param>
          <type>string</type>
          <declname>topologyID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="11" column="6" bodyfile="API.cpp" bodystart="17" bodyend="25"/>
        <references refid="class_j_s_o_n_1a8e9a88433e4ca77f3fb9bf18b04619cc" compoundref="_j_s_o_n_8cpp" startline="101" endline="108">JSON::writeTopology</references>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1aeb782ac76fb0779d97f2d7784688dc57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_topology" kindref="compound">Topology</ref> * &gt;</type>
        <definition>vector&lt; Topology * &gt; API::queueryTopologies</definition>
        <argsstring>()</argsstring>
        <name>queueryTopologies</name>
        <qualifiedname>API::queueryTopologies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="12" column="8" bodyfile="API.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1ae61cf33d3771ccbe778f39446bd72525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool API::deleteTopology</definition>
        <argsstring>(string topologyID)</argsstring>
        <name>deleteTopology</name>
        <qualifiedname>API::deleteTopology</qualifiedname>
        <param>
          <type>string</type>
          <declname>topologyID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="13" column="6" bodyfile="API.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a46f09b5c63cc0e7ee9fb759e3947671c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
        <definition>vector&lt; Component * &gt; API::queryDevices</definition>
        <argsstring>(string TopologyID)</argsstring>
        <name>queryDevices</name>
        <qualifiedname>API::queryDevices</qualifiedname>
        <param>
          <type>string</type>
          <declname>TopologyID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="14" column="8" bodyfile="API.cpp" bodystart="43" bodyend="49"/>
        <references refid="class_topology_1a22eb41600ab4c15be29732cff616cca5" compoundref="_topology_8cpp" startline="82" endline="85">Topology::getComponents</references>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a380efa1662170ab32c19c52ea8f47841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>vector&lt; <ref refid="class_component" kindref="compound">Component</ref> * &gt;</type>
        <definition>vector&lt; Component * &gt; API::queryDevicesWithNetlistNodes</definition>
        <argsstring>(string TopologyID, string netlistNodeID)</argsstring>
        <name>queryDevicesWithNetlistNodes</name>
        <qualifiedname>API::queryDevicesWithNetlistNodes</qualifiedname>
        <param>
          <type>string</type>
          <declname>TopologyID</declname>
        </param>
        <param>
          <type>string</type>
          <declname>netlistNodeID</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="15" column="8" bodyfile="API.cpp" bodystart="51" bodyend="57"/>
        <references refid="class_topology_1a1fa99284d7854654f6834bd4796b67d0" compoundref="_topology_8cpp" startline="87" endline="98">Topology::getComponentsWithNetlistNode</references>
      </memberdef>
      <memberdef kind="function" id="class_a_p_i_1a2c416d5e7142fcf5950ef305ce3bf8d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void API::printAllTopologies</definition>
        <argsstring>()</argsstring>
        <name>printAllTopologies</name>
        <qualifiedname>API::printAllTopologies</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="API.h" line="16" column="6" bodyfile="API.cpp" bodystart="58" bodyend="66"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>API</label>
        <link refid="class_a_p_i"/>
      </node>
    </collaborationgraph>
    <location file="API.h" line="3" column="1" bodyfile="API.h" bodystart="4" bodyend="17"/>
    <listofallmembers>
      <member refid="class_a_p_i_1a6b52b248c1e83149a757e951f2dc322c" prot="private" virt="non-virtual"><scope>API</scope><name>_getTopology</name></member>
      <member refid="class_a_p_i_1ae61cf33d3771ccbe778f39446bd72525" prot="public" virt="non-virtual"><scope>API</scope><name>deleteTopology</name></member>
      <member refid="class_a_p_i_1a2fec1029af1acd1ad9029587e5b36f4f" prot="private" virt="non-virtual"><scope>API</scope><name>parser</name></member>
      <member refid="class_a_p_i_1a2c416d5e7142fcf5950ef305ce3bf8d9" prot="public" virt="non-virtual"><scope>API</scope><name>printAllTopologies</name></member>
      <member refid="class_a_p_i_1a46f09b5c63cc0e7ee9fb759e3947671c" prot="public" virt="non-virtual"><scope>API</scope><name>queryDevices</name></member>
      <member refid="class_a_p_i_1a380efa1662170ab32c19c52ea8f47841" prot="public" virt="non-virtual"><scope>API</scope><name>queryDevicesWithNetlistNodes</name></member>
      <member refid="class_a_p_i_1aeb782ac76fb0779d97f2d7784688dc57" prot="public" virt="non-virtual"><scope>API</scope><name>queueryTopologies</name></member>
      <member refid="class_a_p_i_1a56489f419f0fb6517d003c47f9c7d4e7" prot="public" virt="non-virtual"><scope>API</scope><name>readTopology</name></member>
      <member refid="class_a_p_i_1a09c04367a642b864f1293961ff5a52f4" prot="private" virt="non-virtual"><scope>API</scope><name>topologyList</name></member>
      <member refid="class_a_p_i_1a03cbecbd8bdee695b19fc6cd4a5d9a93" prot="public" virt="non-virtual"><scope>API</scope><name>writeTopology</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
